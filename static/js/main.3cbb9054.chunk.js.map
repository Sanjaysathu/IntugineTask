{"version":3,"sources":["logo.svg","profile.svg","destination.svg","warehouse.svg","Navbarmenu.js","Delivery.js","Status.js","Track.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navbarmenu","Navbar","bg","variant","Brand","href","src","logo","alt","Nav","className","Link","style","height","width","borderRadius","backgroundColor","display","justifyContent","alignItems","profile","Delivery","dl","ud","ni","it","od","Container","Row","Button","Status","aws","carrier","source","dest","brand","start","end","status","p","selected","onClick","Track","current","time","ship_date","split","reverse","join","ship_time","slice","padding","float","App","useState","data","setData","tk","setTk","DL","IT","OD","UD","NI","useEffect","abc","a","async","fetch","method","body","JSON","stringify","headers","res","json","datas","length","std","map","pickup_date","stt","i","push","aid","ed","edt","j","document","getElementsByTagName","Number","current_status_code","border","destination","from","scan","item","ind","status_detail","key","warehouse","overflowY","position","info","awbno","to","current_status","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3cbb9054.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.877653ae.svg\";","module.exports = __webpack_public_path__ + \"static/media/profile.52b703a8.svg\";","module.exports = __webpack_public_path__ + \"static/media/destination.85f9fdcc.svg\";","module.exports = __webpack_public_path__ + \"static/media/warehouse.1f5bfd3e.svg\";","import React from 'react';\r\nimport {Navbar,Nav} from 'react-bootstrap';\r\nimport logo from './logo.svg';\r\nimport profile from './profile.svg';\r\n\r\nconst Navbarmenu = () =>{\r\n\r\n    var styles={\r\n        height:'40px',\r\n        width:'40px',\r\n        borderRadius:'50%',\r\n        backgroundColor:'grey',\r\n        display:'flex',\r\n        justifyContent:'center',\r\n        alignItems:'center'\r\n    }\r\n\r\n\r\n\r\n    return(\r\n        <div>\r\n            <Navbar bg=\"light\" variant=\"light\">\r\n                <Navbar.Brand href=\"\"><img src={logo} alt=\"\"/> Intugine</Navbar.Brand>\r\n                <Nav className=\"ml-auto\">\r\n                <Nav.Link href=\"\" className=\"mx-2\">Home</Nav.Link>\r\n                <Nav.Link href=\"\" className=\"mx-2\">Brands</Nav.Link>\r\n                <Nav.Link href=\"\" className=\"mx-2\">Transporters </Nav.Link>\r\n                <Nav.Link href=\"\" className=\"mx-1\"><div style={styles}><img src={profile} alt=\"\"/></div></Nav.Link>\r\n                </Nav>\r\n            </Navbar>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbarmenu;","import React from 'react';\r\nimport {Container,Row,Button} from 'react-bootstrap';\r\n\r\nconst Delivery = ({dl,ud,ni,it,od}) =>{\r\n    return(\r\n        <div>\r\n        <Container className=\"my-5\">\r\n            <Row className=\"justify-content-center\">\r\n                <Button className=\"mx-3\"><h6 className=\"mb-3 mr-5\">DEL</h6><div><h4 className=\"mb-0\">{dl}</h4></div></Button>\r\n                <Button className=\"mx-3\"><h6 className=\"mb-3 mr-5\">INT</h6><div><h4 className=\"mb-0\">{it}</h4></div></Button>\r\n                <Button className=\"mx-3\"><h6 className=\"mb-3 mr-5\">OOD</h6><div><h4 className=\"mb-0\">{od}</h4></div></Button>\r\n                <Button className=\"mx-3\"><h6 className=\"mb-3 mr-5\">UND</h6><div><h4 className=\"mb-0\">{ud}</h4></div></Button>\r\n                <Button className=\"mx-3\"><h6 className=\"mb-3 mr-5\">NFI</h6><div><h4 className=\"mb-0\">{ni}</h4></div></Button>\r\n            </Row>\r\n        </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Delivery;","import React from 'react';\r\nimport './Status.css';\r\n\r\nconst Status = ({aws,carrier,source,dest,brand,start,end,status,p,selected}) =>{\r\n    return(   \r\n                <tr onClick={()=>selected(p)} >\r\n                    <td>#{aws}</td>\r\n                    <td>{carrier}</td>\r\n                    <td>{source}</td>\r\n                    <td>{dest}</td>\r\n                    <td>{brand}</td>\r\n                    <td>{start}</td>\r\n                    <td>{end}</td>\r\n                    <td>{status}</td>\r\n                </tr>\r\n                \r\n    )\r\n    }\r\n\r\nexport default Status;","import React from 'react';\r\nimport './Track.css';\r\n\r\n\r\nconst Track = ({current,time}) =>{\r\n    var ship_date = (time.split(' ')[0].split('-').reverse().join('-'));\r\n    var ship_time = (time.split(' ')[1].slice(0,5));\r\n    return(\r\n        \r\n       <div className=\"dow\">\r\n            <div className=\"dot\"></div>\r\n            <div className=\"dash\"></div>\r\n                <div className=\"cont\">\r\n                    <div>\r\n                        <span style={{padding:'0px 0px 0px 10px'}}>\r\n                            {current}\r\n                        </span>\r\n                        <span style={{float:'right',padding:'0px 15px'}}>\r\n                            {ship_time}\r\n                        </span>\r\n                        <span style={{float:'right',padding:'0px 15px'}}>\r\n                            {ship_date}\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Track;","import React,{useEffect,useState} from 'react';\nimport './App.css';\nimport Navbarmenu from './Navbarmenu';\nimport Delivery from './Delivery';\nimport Status from './Status';\nimport './Status.css';\nimport Track from './Track';\nimport destination from './destination.svg';\nimport warehouse from './warehouse.svg';\n\nfunction App() {\n\n  const [data,setData] = useState([]);\n  const [tk,setTk] = useState(0);\n  var [DL,IT,OD,UD,NI] = [0,0,0,0,0];\n\n  useEffect( () =>{abc()}, [] )\n  const abc = async () =>{\n    const res = await fetch(' https://93870v1pgk.execute-api.ap-south-1.amazonaws.com/latest/shipments/mayank',\n    {\n        method: 'POST', \n        body: JSON.stringify({\"email\": \"mayankmittal@intugine.com\"}), \n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer tTU3gFVUdP'\n        }\n       \n      });\n    const datas = await res.json();\n    setData(datas.data);\n    \n  };\n  \n  if(data.length !== 0){\n    var std =[];\n    std = data.map(it => (it.pickup_date));\n    var stt = [];\n      for(var i of std){\n        if(i===null){\n          stt.push('');\n        }\n        else{\n          let aid = i.slice(0,10).split('-').reverse().join('/');\n          stt.push(aid);\n      }}\n   \n    var ed =[];\n    ed = data.map(it => (it.time));\n    var edt = [];\n      for(var j of ed){\n        if(j===null){\n          edt.push('');\n        }\n        else{\n          let aid = j.slice(0,10).split('-').reverse().join('/');\n          edt.push(aid);\n      }}\n  }\n  var selected = (a) =>{\n    document.getElementsByTagName(\"tr\")[tk+Number(1)].style.backgroundColor=\"\";\n    setTk(a);\n    document.getElementsByTagName(\"tr\")[a+Number(1)].style.backgroundColor=\"rgb(211, 215, 215)\";\n  }\n\n  for(var t of data){\n    switch (t.current_status_code) {\n      case \"OOD\":\n        OD++;   \n        break;\n      case \"DEL\":\n        DL++;\n        break;\n      case \"INT\":\n        IT++;\n        break;\n      case \"UND\":\n        UD++;\n        break;\n      case \"NFI\":\n        NI++;\n        break;\n      default:\n        break;\n    }\n  }\n  \n\n  return (\n    <div>\n       <Navbarmenu />\n       <Delivery od={OD} dl={DL} it={IT} ni={NI} ud={UD}/>\n        {data.length !== 0 ?\n       <div style={{display:'flex',justifyContent:'space-around',alignItems:'center'}}>\n            <div style={{width:'30vw',border:'1px solid rgb(228, 225, 225)',height:'45vh'}} className=\"head\">\n                <div className=\"spa\"><img src={destination} alt=\"\" /></div>\n                  <div className=\"gap\">\n                        { data[tk].from === null ?\n                          <div>\n                          <div className=\"dow\">\n                            <div className=\"dot\"></div>\n                            <div className=\"dash\"></div>\n                                <div className=\"cont\">\n                                    <div>\n                                        UNDELIVERED\n                                    </div>\n                                </div>\n                          </div>\n                          </div>\n                        :\n                        data[tk].scan.map((item,ind) =>(\n                        <Track \n                          current={item.status_detail}\n                          time={item.time}\n                          key={ind}\n                        />\n                      ))\n                    }                   \n                  </div>\n                <div className=\"spa\"><img src={warehouse} alt=\"\" /></div>\n            </div>\n\n            <div style={{width:'60vw',height:'50vh',overflowY:'scroll',border:'1px solid rgb(228, 225, 225)'}}>\n              <table style={{position:'relative'}} className=\"text-center\">\n                <thead>\n                  <tr>\n                    <th>AWB NUMBER</th>\n                    <th>TRANSPORTER</th>\n                    <th>SOURCE</th>\n                    <th>DESTINATION</th>\n                    <th>BRAND</th>\n                    <th>START DATE</th>\n                    <th>ETD</th>\n                    <th>STATUS</th>\n                  </tr>\n                </thead>\n                <tbody>\n                {\n                data.map((info,p) => (\n                  <Status aws={info.awbno}\n                    carrier={info.carrier}\n                    source={info.from}\n                    dest={info.to}\n                    brand={'USPA'}\n                    start={stt[p]}\n                    end={edt[p]}\n                    status={info.current_status}\n                    p={p}\n                    selected={selected}\n                    key={p}\n                  />\n                ))\n              }\n              </tbody>\n              </table>\n            </div>\n            \n         </div> : <div></div> }\n        \n       \n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}