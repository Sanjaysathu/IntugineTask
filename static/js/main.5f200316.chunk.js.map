{"version":3,"sources":["profile.svg","destination.svg","warehouse.svg","Navbarmenu.js","Delivery.js","Status.js","Track.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navbarmenu","Navbar","bg","variant","Brand","href","Nav","className","Link","style","height","width","borderRadius","backgroundColor","display","justifyContent","alignItems","src","profile","alt","Delivery","dl","ud","ni","it","od","Container","Row","Button","Status","aws","carrier","source","dest","brand","start","end","status","p","selected","onClick","Track","current","time","ship_date","split","reverse","join","ship_time","slice","padding","float","App","useState","data","setData","tk","setTk","DL","IT","OD","UD","NI","useEffect","abc","a","async","fetch","method","body","JSON","stringify","headers","res","json","datas","length","std","map","pickup_date","stt","i","push","aid","ed","edt","j","document","getElementsByTagName","Number","current_status_code","border","destination","from","scan","item","ind","status_detail","key","warehouse","overflowY","position","info","awbno","to","current_status","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5f200316.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/profile.52b703a8.svg\";","module.exports = __webpack_public_path__ + \"static/media/destination.85f9fdcc.svg\";","module.exports = __webpack_public_path__ + \"static/media/warehouse.1f5bfd3e.svg\";","import React from 'react';\r\nimport {Navbar,Nav} from 'react-bootstrap';\r\nimport profile from './profile.svg';\r\n\r\nconst Navbarmenu = () =>{\r\n\r\n    var styles={\r\n        height:'40px',\r\n        width:'40px',\r\n        borderRadius:'50%',\r\n        backgroundColor:'grey',\r\n        display:'flex',\r\n        justifyContent:'center',\r\n        alignItems:'center'\r\n    }\r\n\r\n\r\n\r\n    return(\r\n        <div>\r\n            <Navbar bg=\"light\" variant=\"light\">\r\n                <Navbar.Brand href=\"\">Company Name</Navbar.Brand>\r\n                <Nav className=\"ml-auto\">\r\n                <Nav.Link href=\"\" className=\"mx-2\">Home</Nav.Link>\r\n                <Nav.Link href=\"\" className=\"mx-2\">Brands</Nav.Link>\r\n                <Nav.Link href=\"\" className=\"mx-2\">Transporters </Nav.Link>\r\n                <Nav.Link href=\"\" className=\"mx-1\"><div style={styles}><img src={profile} alt=\"\"/></div></Nav.Link>\r\n                </Nav>\r\n            </Navbar>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbarmenu;","import React from 'react';\r\nimport {Container,Row,Button} from 'react-bootstrap';\r\n\r\nconst Delivery = ({dl,ud,ni,it,od}) =>{\r\n    return(\r\n        <div>\r\n        <Container className=\"my-5\">\r\n            <Row className=\"justify-content-center\">\r\n                <Button className=\"mx-3\"><h6 className=\"mb-3 mr-5\">DEL</h6><div><h4 className=\"mb-0\">{dl}</h4></div></Button>\r\n                <Button className=\"mx-3\"><h6 className=\"mb-3 mr-5\">INT</h6><div><h4 className=\"mb-0\">{it}</h4></div></Button>\r\n                <Button className=\"mx-3\"><h6 className=\"mb-3 mr-5\">OOD</h6><div><h4 className=\"mb-0\">{od}</h4></div></Button>\r\n                <Button className=\"mx-3\"><h6 className=\"mb-3 mr-5\">UND</h6><div><h4 className=\"mb-0\">{ud}</h4></div></Button>\r\n                <Button className=\"mx-3\"><h6 className=\"mb-3 mr-5\">NFI</h6><div><h4 className=\"mb-0\">{ni}</h4></div></Button>\r\n            </Row>\r\n        </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Delivery;","import React from 'react';\r\nimport './Status.css';\r\n\r\nconst Status = ({aws,carrier,source,dest,brand,start,end,status,p,selected}) =>{\r\n    return(   \r\n                <tr onClick={()=>selected(p)} >\r\n                    <td>#{aws}</td>\r\n                    <td>{carrier}</td>\r\n                    <td>{source}</td>\r\n                    <td>{dest}</td>\r\n                    <td>{brand}</td>\r\n                    <td>{start}</td>\r\n                    <td>{end}</td>\r\n                    <td>{status}</td>\r\n                </tr>\r\n                \r\n    )\r\n    }\r\n\r\nexport default Status;","import React from 'react';\r\nimport './Track.css';\r\n\r\n\r\nconst Track = ({current,time}) =>{\r\n    var ship_date = (time.split(' ')[0].split('-').reverse().join('-'));\r\n    var ship_time = (time.split(' ')[1].slice(0,5));\r\n    return(\r\n        \r\n       <div className=\"dow\">\r\n            <div className=\"dot\"></div>\r\n            <div className=\"dash\"></div>\r\n                <div className=\"cont\">\r\n                    <div>\r\n                        <span style={{padding:'0px 0px 0px 10px'}}>\r\n                            {current}\r\n                        </span>\r\n                        <span style={{float:'right',padding:'0px 15px'}}>\r\n                            {ship_time}\r\n                        </span>\r\n                        <span style={{float:'right',padding:'0px 15px'}}>\r\n                            {ship_date}\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Track;","import React,{useEffect,useState} from 'react';\r\nimport './App.css';\r\nimport Navbarmenu from './Navbarmenu';\r\nimport Delivery from './Delivery';\r\nimport Status from './Status';\r\nimport './Status.css';\r\nimport Track from './Track';\r\nimport destination from './destination.svg';\r\nimport warehouse from './warehouse.svg';\r\n\r\nfunction App() {\r\n\r\n  const [data,setData] = useState([]);\r\n  const [tk,setTk] = useState(0);\r\n  var [DL,IT,OD,UD,NI] = [0,0,0,0,0];\r\n\r\n  useEffect( () =>{abc()}, [] )\r\n  const abc = async () =>{\r\n    const res = await fetch(' https://93870v1pgk.execute-api.ap-south-1.amazonaws.com/latest/shipments/mayank',\r\n    {\r\n        method: 'POST', \r\n        body: JSON.stringify({\"email\": \"mayankmittal@intugine.com\"}), \r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': 'Bearer tTU3gFVUdP'\r\n        }\r\n       \r\n      });\r\n    const datas = await res.json();\r\n    setData(datas.data);\r\n    \r\n  };\r\n  \r\n  if(data.length !== 0){\r\n    var std =[];\r\n    std = data.map(it => (it.pickup_date));\r\n    var stt = [];\r\n      for(var i of std){\r\n        if(i===null){\r\n          stt.push('');\r\n        }\r\n        else{\r\n          let aid = i.slice(0,10).split('-').reverse().join('/');\r\n          stt.push(aid);\r\n      }}\r\n   \r\n    var ed =[];\r\n    ed = data.map(it => (it.time));\r\n    var edt = [];\r\n      for(var j of ed){\r\n        if(j===null){\r\n          edt.push('');\r\n        }\r\n        else{\r\n          let aid = j.slice(0,10).split('-').reverse().join('/');\r\n          edt.push(aid);\r\n      }}\r\n  }\r\n  var selected = (a) =>{\r\n    document.getElementsByTagName(\"tr\")[tk+Number(1)].style.backgroundColor=\"\";\r\n    setTk(a);\r\n    document.getElementsByTagName(\"tr\")[a+Number(1)].style.backgroundColor=\"rgb(211, 215, 215)\";\r\n  }\r\n\r\n  for(var t of data){\r\n    switch (t.current_status_code) {\r\n      case \"OOD\":\r\n        OD++;   \r\n        break;\r\n      case \"DEL\":\r\n        DL++;\r\n        break;\r\n      case \"INT\":\r\n        IT++;\r\n        break;\r\n      case \"UND\":\r\n        UD++;\r\n        break;\r\n      case \"NFI\":\r\n        NI++;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n  \r\n\r\n  return (\r\n    <div>\r\n       <Navbarmenu />\r\n       <Delivery od={OD} dl={DL} it={IT} ni={NI} ud={UD}/>\r\n        {data.length !== 0 ?\r\n       <div style={{display:'flex',justifyContent:'space-around',alignItems:'center'}}>\r\n            <div style={{width:'30vw',border:'1px solid rgb(228, 225, 225)',height:'45vh'}} className=\"head\">\r\n                <div className=\"spa\"><img src={destination} alt=\"\" /></div>\r\n                  <div className=\"gap\">\r\n                        { data[tk].from === null ?\r\n                          <div>\r\n                          <div className=\"dow\">\r\n                            <div className=\"dot\"></div>\r\n                            <div className=\"dash\"></div>\r\n                                <div className=\"cont\">\r\n                                    <div>\r\n                                        UNDELIVERED\r\n                                    </div>\r\n                                </div>\r\n                          </div>\r\n                          </div>\r\n                        :\r\n                        data[tk].scan.map((item,ind) =>(\r\n                        <Track \r\n                          current={item.status_detail}\r\n                          time={item.time}\r\n                          key={ind}\r\n                        />\r\n                      ))\r\n                    }                   \r\n                  </div>\r\n                <div className=\"spa\"><img src={warehouse} alt=\"\" /></div>\r\n            </div>\r\n\r\n            <div style={{width:'60vw',height:'50vh',overflowY:'scroll',border:'1px solid rgb(228, 225, 225)'}}>\r\n              <table style={{position:'relative'}} className=\"text-center\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>AWB NUMBER</th>\r\n                    <th>TRANSPORTER</th>\r\n                    <th>SOURCE</th>\r\n                    <th>DESTINATION</th>\r\n                    <th>BRAND</th>\r\n                    <th>START DATE</th>\r\n                    <th>ETD</th>\r\n                    <th>STATUS</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                {\r\n                data.map((info,p) => (\r\n                  <Status aws={info.awbno}\r\n                    carrier={info.carrier}\r\n                    source={info.from}\r\n                    dest={info.to}\r\n                    brand={'USPA'}\r\n                    start={stt[p]}\r\n                    end={edt[p]}\r\n                    status={info.current_status}\r\n                    p={p}\r\n                    selected={selected}\r\n                    key={p}\r\n                  />\r\n                ))\r\n              }\r\n              </tbody>\r\n              </table>\r\n            </div>\r\n            \r\n         </div> : <div></div> }\r\n        \r\n       \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}